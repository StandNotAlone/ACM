#include<algorithm>
#include<iostream>
#include<cstring>
#include<cstdio>
#include<fstream>
#include<string>
#include<vector>
#include<cmath>
#include<queue>
#include<map>
#include<set>
//#include<bits/stdc++.h>
#define INF 0x7f7f7f7f //2139062143
#define INF1 0x3f3f3f3f //1061109567
#define INF2 2147483647
#define llINF 9223372036854775807
#define pi 3.141592653589793//23846264338327950254
#define pb push_back
#define ll long long
//freopen(".in","r",stdin);
//freopen(".out","w",stdout);
//ifstream f1(".txt");
//ofstream f2(".txt");
//ios::sync_with_stdio(false);
//cin.tie(0);
using namespace std;
#define local
#ifdef local
#endif
const int maxn=INF;

//反思一下这么简单的dp为什么没写出来

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    ll n,a,b,c;
    cin>>n>>a>>b>>c;
    string s;
    s.resize(n);
    for(char &c:s)
        cin>>c;
    ll dp[300010];
    memset(dp,0,sizeof(dp));
    for(ll i=0;i<n;i++)
    {
        dp[i+1]=dp[i];
        if(i>=3&&s.substr(i-3,4)=="nico") dp[i+1]=max(dp[i+1],dp[i-3]+a);
        if(i>=5&&s.substr(i-5,6)=="niconi") dp[i+1]=max(dp[i+1],dp[i-5]+b);
        if(i>=9&&s.substr(i-9,10)=="niconiconi") dp[i+1]=max(dp[i+1],dp[i-9]+c);
        //if(i>=3&&s[i-3]=='n'&&s[i-2]=='i'&&s[i-1]=='c'&&s[i]=='o') dp[i+1]=max(dp[i+1],dp[i-3]+a);
        //if(i>=5&&s[i-5]=='n'&&s[i-4]=='i'&&s[i-3]=='c'&&s[i-2]=='o'&&s[i-1]=='n'&&s[i]=='i') dp[i+1]=max(dp[i+1],dp[i-5]+b);
        //if(i>=9&&s[i-9]=='n'&&s[i-8]=='i'&&s[i-7]=='c'&&s[i-6]=='o'&&s[i-5]=='n'&&s[i-4]=='i'&&s[i-3]=='c'&&s[i-2]=='o'&&s[i-1]=='n'&&s[i]=='i')
          //  dp[i+1]=max(dp[i+1],dp[i-9]+c);
    }
    cout<<dp[n]<<endl;
}




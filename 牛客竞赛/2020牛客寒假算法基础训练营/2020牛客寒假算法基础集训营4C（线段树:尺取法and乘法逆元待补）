#include<algorithm>
#include<iostream>
#include<cstring>
#include<fstream>
#include<iomanip>
#include<cstdio>
#include<string>
#include<vector>
#include<cmath>
#include<queue>
#include<map>
#include<set>
//#include<bits/stdc++.h>
#define INF 0x7f7f7f7f //2139062143
#define INF1 0x3f3f3f3f //1061109567
#define INF2 2147483647
#define llINF 9223372036854775807
#define pi 3.141592653589793//23846264338327950254
#define pb push_back
#define ll long long
//freopen(".in","r",stdin);
//freopen(".out","w",stdout);
//ifstream f1(".txt");
//ofstream f2(".txt");
//ios::sync_with_stdio(false);
//cin.tie(0);
using namespace std;
#define local
#ifdef local
#endif
const int maxn=200010;
const ll mod=998244353;

ll A[maxn];

struct SegmentTree
{
    ll l,r;
    ll ans;
}ST[4*maxn];

void buildST(ll l,ll r,ll loca)
{
    //cout<<l<<' '<<r<<' '<<loca<<endl;
    ST[loca].l=l;
    ST[loca].r=r;
    if(l==r)
    {
        ST[loca].ans=A[l]%mod;
        return;
    }
    ll mid=l+((r-l)>>1);
    buildST(l,mid,2*loca);
    buildST(mid+1,r,2*loca+1);
    ST[loca].ans=ST[loca*2].ans*ST[loca*2+1].ans%mod;
}

//void changeST(ll x,ll loca)
//{
//    if(ST[loca].l==ST[loca].r)
//    {
//        ST[loca].ans=A[x];
//        return;
//    }
//    ll mid=ST[loca].l+((ST[loca].r-ST[loca].l)>>1);
//    if(mid>=x) changeST(x,loca*2);
//    else changeST(x,loca*2+1);
//    ST[loca].ans=max(ST[loca*2].ans,ST[loca*2+1].ans);
//}

ll askST(ll l,ll r,ll loca)
{
    if(l<=ST[loca].l&&r>=ST[loca].r) return ST[loca].ans;
    ll mid=ST[loca].l+((ST[loca].r-ST[loca].l)>>1);
    ll val=1;
    if(l<=mid) val=val*askST(l,r,loca*2)%mod;
    if(r>mid) val=val*askST(l,r,loca*2+1)%mod;
    return val;
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    ll n,k;
    cin>>n>>k;
    for(ll i=0;i<n;i++)
        cin>>A[i];
    buildST(0,n-1,1);
//    ll x,y;
//    for(ll i=0;i<1000;i++)
//    {
//        cin>>x>>y;
//        cout<<askST(x,y,1)<<endl;
//    }
    //ST[0];
    ll ans=-1;
    for(ll i=k-1;i<n;i++)
        ans=max(ans,askST(i-k+1,i,1));
    cout<<ans<<endl;
}




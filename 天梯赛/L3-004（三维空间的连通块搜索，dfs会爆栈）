#include<map>
#include<set>
#include<cmath>
#include<queue>
#include<cstdio>
#include<string>
#include<vector>
#include<cstring>
#include<fstream>
#include<iomanip>
#include<iostream>
#include<algorithm>
#include<bits/stdc++.h>
#define INF 0x7f7f7f7f //2139062143
#define INF1 0x3f3f3f3f //1061109567
#define INF2 2147483647
#define llINF 9223372036854775807
#define pi 3.141592653589793//23846264338327950254
#define pb push_back
#define ll long long
#define vec vector<ll>
#define mat vector<vector<ll>>
//cout<<fixed<<setprecision(6)<<
//freopen(".in","r",stdin);
//freopen(".out","w",stdout);
//ifstream f1(".txt");
//ofstream f2(".txt");
//ios::sync_with_stdio(false);
//cin.tie(0);
using namespace std;
#define local
#ifdef local
#endif
const int maxn=1e4+7;

struct Node
{
    int x,y,z;
};

int n,m,l,t,ans,cas;
bool field[70][1300][130];
int dir[6][3]=
{
    1,0,0,
    -1,0,0,
    0,0,1,
    0,0,-1,
    0,1,0,
    0,-1,0
};

void bfs(int x,int y,int z)
{
    deque<Node>Q;
    Node node;
    node.x=x;node.y=y;node.z=z;
    field[x][y][z]=0;
    Q.pb(node);
    while(Q.size())
    {
        cas++;
        for(int i=0;i<6;i++)
        {
            node.x=Q[0].x+dir[i][0];
            node.y=Q[0].y+dir[i][1];
            node.z=Q[0].z+dir[i][2];
            if(node.x>=0&&node.x<l&&node.y>=0&&node.y<n&&node.z>=0&&node.z<m&&field[node.x][node.y][node.z])
            {
                field[node.x][node.y][node.z]=0;
                Q.pb(node);
            }
        }
        Q.pop_front();
    }
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cin>>n>>m>>l>>t;
    for(int i=0;i<l;i++)
    {
        for(int j=0;j<n;j++)
        {
            for(int k=0;k<m;k++)
                cin>>field[i][j][k];
        }
    }
    for(int i=0;i<l;i++)
    {
        for(int j=0;j<n;j++)
        {
            for(int k=0;k<m;k++)
            {
                if(field[i][j][k])
                {
                    cas=0;
                    bfs(i,j,k);
                    if(cas>=t) ans+=cas;
                }
            }
        }
    }
    cout<<ans<<endl;
}



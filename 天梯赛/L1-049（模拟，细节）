#include<map>
#include<set>
#include<cmath>
#include<queue>
#include<cstdio>
#include<string>
#include<vector>
#include<cstring>
#include<fstream>
#include<iomanip>
#include<iostream>
#include<algorithm>
#include<bits/stdc++.h>
#define INF 0x7f7f7f7f //2139062143
#define INF1 0x3f3f3f3f //1061109567
#define INF2 2147483647
#define llINF 9223372036854775807
#define pi 3.141592653589793//23846264338327950254
#define ft first
#define sd second
#define pb push_back
#define ll long long
#define vec vector<ll>
#define mat vector<vector<ll>>
//cout<<fixed<<setprecision(6)<<
//freopen(".in","r",stdin);
//freopen(".out","w",stdout);
//ifstream f1(".txt");
//ofstream f2(".txt");
//ios::sync_with_stdio(false);
//cin.tie(0);
using namespace std;
#define local
#ifdef local
#endif
const ll maxn=6e5+7;
const double eps=1e-10;

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    ll n;
    cin>>n;
    vector<ll>school(n);
    vector<pair<ll,ll>>field[n];
    for(ll i=0;i<n;i++)
    {
        cin>>school[i];
        field[i].resize(school[i]);
    }
    vector<ll>flag(1);
    ll num=0;
    for(ll i=1;flag.size();i++)
    {
        flag.clear();
        for(ll j=0;j<n;j++)
            if(school[j]>=i) 
                flag.pb(j);
        for(ll j=0;j<(ll)flag.size();j++)
        {
            field[flag[j]][i-1].ft=num+j+1;
            if(flag.size()<2) 
            {
                bool f=1;
                for(ll k=flag[0]+1;k<n;k++)
                    if(school[k]==i-1)
                    {
                        f=0;
                        break;
                    }
                if(f&&i>1) field[flag[j]][i-1].ft++;
                else num--;
                field[flag[j]][i-1].sd=2;
            }
            else field[flag[j]][i-1].sd=(ll)flag.size();
        }
        if(flag.size()<2) num+=20;
        else num+=10*flag.size();
    }
    for(ll i=0;i<n;i++)
    {
        cout<<'#'<<i+1<<endl;
        for(auto &x:field[i])
        {
            for(ll j=0;j<10;j++)
            {
                if(j) cout<<' ';
                cout<<x.ft+j*x.sd;
            }
            cout<<endl;
        }
    }
}



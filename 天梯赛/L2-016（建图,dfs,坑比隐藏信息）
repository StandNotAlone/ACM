#include<map>
#include<set>
#include<cmath>
#include<queue>
#include<stack>
#include<cstdio>
#include<vector>
#include<bitset>
#include<string>
#include<cstdlib>
#include<cstring>
#include<fstream>
#include<sstream>
#include<iomanip>
#include<iostream>
#include<algorithm>
#include<functional>
#include<bits/stdc++.h>
#define INF 0x7f7f7f7f //2139062143
#define INF1 0x3f3f3f3f //1061109567
#define INF2 2147483647
#define llINF 9223372036854775807
#define pi 3.141592653589793//23846264338327950254
#define ft first
#define sd second
#define mp make_pair
#define pb push_back
#define ll long long
#define vec vector<ll>
#define mat vector<vector<ll>>
#define rep(i,n) for(ll i=0;i<(ll)(n);i++)
#define _rep(i,n) for(ll i=n-1;i>=0;i--)
#define REP(i,n) for(ll i=1;i<=(ll)(n);i++)
#define _REP(i,n) for(ll i=n;i>0;i--)
#define at(x,n) for(auto &x:n)
//cout<<fixed<<setprecision(6)<<
//freopen(".in","r",stdin);
//freopen(".out","w",stdout);
//ifstream f1("/Users/wangzichao/Documents/wzc.in");
//ofstream f2("/Users/wangzichao/Documents/wzc.out");
//ios::sync_with_stdio(false);
//cin.tie(0);cout.tie(0);
using namespace std;
#define local
#ifdef local
#endif
const ll maxn=1e5+7;
const double eps=1e-10;
const ll mod=1e9+7;

ll n;
ll x,f,m;
char c;

vec v1,v2;

struct node
{
    ll father=-1,mother=-1,son=-1;
    bool sex=0;
}data[maxn];

ll read()
{
    string s;
    cin>>s;
    if(s[0]=='-') return -1;
    ll ret=0;
    rep(i,5) ret=ret*10+s[i]-'0';
    return ret;
}

void dfs(vec &v,ll now,int sum)
{
    if(sum>4) return;
    v.pb(now);
    if(data[now].father!=-1) dfs(v,data[now].father,sum+1);
    if(data[now].mother!=-1) dfs(v,data[now].mother,sum+1);
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);cout.tie(0);
    cin>>n;
    rep(i,n)
    {
        x=read();
        cin>>c;
        f=read();
        m=read();
        data[x].father=f;
        data[f].sex=0;
        data[x].mother=m;
        data[m].sex=1;
        c=='M'?data[x].sex=0:data[x].sex=1;
    }
    cin>>n;
    rep(i,n)
    {
        ll a,b;
        a=read();
        b=read();
        if(data[a].sex==data[b].sex) cout<<"Never Mind"<<endl;
        else
        {
            v1.clear();
            v2.clear();
            dfs(v1,a,0);
            dfs(v2,b,0);
            bool flag=1;
            at(x,v1)
                at(y,v2)
                if(x==y) flag=0;
            if(flag) cout<<"Yes"<<endl;
            else cout<<"No"<<endl;
        }
    }
}



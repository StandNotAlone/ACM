#include<bits/stdc++.h>
#define ll long long
#define INF 0x7f7f7f7f //2139062143
#define llINF 9223372036854775807
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
using namespace std;

int n,tot=1,now=1;
int fa[1007],num[1007],childl[1007],childr[1007],Min[1007];
int incas[1007];
bool flag=1;

void print(int i)
{
    if(childl[i]!=-1) print(childl[i]);
    if(childr[i]!=-1) print(childr[i]);
    printf("%d",num[i]);
    if(i==1) printf("\n");
    else printf(" ");
}

int32_t main()
{
    memset(fa,-1,sizeof(fa));
    memset(num,-1,sizeof(num));
    memset(childl,-1,sizeof(childl));
    memset(childr,-1,sizeof(childr));
    memset(Min,-1,sizeof(Min));
    scanf("%d",&n);
    scanf("%d",&num[1]);incas[1]=num[1];
    for(int i=2;i<=n;i++) scanf("%d",&incas[i]);
    for(int i=2;i<=n;i++)
    {
        int x=incas[i];
        if(x>=num[now])
        {
            while(fa[now]!=-1&&num[fa[now]]<=x) now=fa[now];
            while(1)
            {
                if(x>=num[now])
                {
                    if(childr[now]!=-1) now=childr[now];
                    else break;
                }
                else
                {
                    if(childl[now]!=-1) now=childl[now];
                    else break;
                }
            }
            childr[now]=++tot;
            if(Min[now]==-1) Min[tot]=num[now];
            else Min[tot]=Min[now];
            num[tot]=x;
            fa[tot]=now;
            now=tot;
        }
        else
        {
            if(x<Min[now]) {flag=0;break;}
            else
            {
                childl[now]=++tot;
                num[tot]=x;
                fa[tot]=now;
                Min[tot]=Min[now];
                now=tot;
            }
        }
    }
    if(flag)
    {
        printf("YES\n");
        print(1);
    }
    else
    {
        flag=1;tot=1;now=1;
        memset(fa,-1,sizeof(fa));
        memset(num,-1,sizeof(num));
        memset(childl,-1,sizeof(childl));
        memset(childr,-1,sizeof(childr));
        memset(Min,0x3f,sizeof(Min));
        num[1]=incas[1];
        for(int i=2;i<=n;i++)
        {
            int x=incas[i];
            if(x<num[now])
            {
                while(fa[now]!=-1&&num[fa[now]]>x) now=fa[now];
                while(1)
                {
                    if(x>=num[now])
                    {
                        if(childl[now]!=-1) now=childl[now];
                        else break;
                    }
                    else
                    {
                        if(childr[now]!=-1) now=childr[now];
                        else break;
                    }
                }
                childr[now]=++tot;
                if(Min[now]==Min[0]) Min[tot]=num[now];
                else Min[tot]=Min[now];
                num[tot]=x;
                fa[tot]=now;
                now=tot;
            }
            else
            {
                if(x>=Min[now]) {flag=0;break;}
                else
                {
                    childl[now]=++tot;
                    num[tot]=x;
                    fa[tot]=now;
                    Min[tot]=Min[now];
                    now=tot;
                }
            }
        }
        if(flag)
        {
            printf("YES\n");
            print(1);
        }
        else printf("NO\n");
    }
}
